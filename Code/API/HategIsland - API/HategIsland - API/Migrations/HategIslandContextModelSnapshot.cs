// <auto-generated />
using System;
using HategIsland___API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HategIsland___API.Migrations
{
    [DbContext(typeof(HategIslandContext))]
    partial class HategIslandContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HategIsland___API.Models.Battle", b =>
                {
                    b.Property<int>("BattleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentPlayerTurn")
                        .HasColumnType("int");

                    b.Property<int>("InitiatingPlayerID")
                        .HasColumnType("int");

                    b.Property<string>("InitiatingPlayerPack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int>("ReceivingPlayerID")
                        .HasColumnType("int");

                    b.Property<string>("ReceivingPlayerPack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Winner")
                        .HasColumnType("int");

                    b.HasKey("BattleID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("HategIsland___API.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarnFood")
                        .HasColumnType("int");

                    b.Property<int>("Herb")
                        .HasColumnType("int");

                    b.Property<int>("HerbFood")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("PlayerID")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("HategIsland___API.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseDuration")
                        .HasColumnType("int");

                    b.Property<string>("BaseReward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HategIsland___API.Models.LocationVisit", b =>
                {
                    b.Property<int>("LocationVisitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompletionReward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DinosaurID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("LocationVisitID");

                    b.HasIndex("LocationID");

                    b.HasIndex("PlayerID");

                    b.ToTable("LocationVisits");
                });

            modelBuilder.Entity("HategIsland___API.Models.PackedDinosaur", b =>
                {
                    b.Property<int>("PackedDinosaurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<string>("Stats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Traits")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackedDinosaurID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Dinosaurs");
                });

            modelBuilder.Entity("HategIsland___API.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnlockedLocations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("HategIsland___API.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HategIsland___API.Models.Battle", b =>
                {
                    b.HasOne("HategIsland___API.Models.Player", "Player")
                        .WithMany("Battles")
                        .HasForeignKey("PlayerID");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HategIsland___API.Models.Inventory", b =>
                {
                    b.HasOne("HategIsland___API.Models.Player", "Player")
                        .WithOne("Inventory")
                        .HasForeignKey("HategIsland___API.Models.Inventory", "PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HategIsland___API.Models.LocationVisit", b =>
                {
                    b.HasOne("HategIsland___API.Models.Location", "Location")
                        .WithMany("LocationVisits")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HategIsland___API.Models.Player", "Player")
                        .WithMany("LocationVisits")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HategIsland___API.Models.PackedDinosaur", b =>
                {
                    b.HasOne("HategIsland___API.Models.Player", "Player")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HategIsland___API.Models.Player", b =>
                {
                    b.HasOne("HategIsland___API.Models.User", "User")
                        .WithOne("Player")
                        .HasForeignKey("HategIsland___API.Models.Player", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HategIsland___API.Models.Location", b =>
                {
                    b.Navigation("LocationVisits");
                });

            modelBuilder.Entity("HategIsland___API.Models.Player", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Dinosaurs");

                    b.Navigation("Inventory");

                    b.Navigation("LocationVisits");
                });

            modelBuilder.Entity("HategIsland___API.Models.User", b =>
                {
                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
